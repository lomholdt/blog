<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ttp on wunderwuzzi blog</title>
    <link>https://wunderwuzzi23.github.io/blog/tags/ttp/</link>
    <description>Recent content in Ttp on wunderwuzzi blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; WUNDERWUZZI 2020</copyright>
    <lastBuildDate>Fri, 01 May 2020 01:00:46 -0700</lastBuildDate>
    
	<atom:link href="https://wunderwuzzi23.github.io/blog/tags/ttp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Cookie Crimes and the new Microsoft Edge Browser</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/2020/cookie-crimes-on-mirosoft-edge/</link>
      <pubDate>Fri, 01 May 2020 01:00:46 -0700</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/2020/cookie-crimes-on-mirosoft-edge/</guid>
      <description>Revisiting Cookie Crimes In 2018 @mangopdf described &amp;ldquo;Cookie Crimes&amp;rdquo;, which is great research around Chrome&amp;rsquo;s remote debugging feature that allows adversaries and malware to gain access to cookies quite convienently during post-exploitation.
The original research is published here, and it still works today.
The new Microsoft Edge browser and Chromium Microsoft&amp;rsquo;s latest Edge browser is based on the same code, Chromium. I guess, you already know where this is going now&amp;hellip;</description>
    </item>
    
    <item>
      <title>Post-Exploitation: Abusing Chrome&#39;s debugging feature to observe and control browsing sessions remotely</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/2020/chrome-spy-remote-control/</link>
      <pubDate>Tue, 28 Apr 2020 18:00:00 -0700</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/2020/chrome-spy-remote-control/</guid>
      <description>Chrome&amp;rsquo;s remote debugging feature enables malware post-exploitation to gain access to cookies. Root privileges are not required. This is a pretty well-known and commonly used adversarial technique - at least since 2018 when Cookie Crimes was released.
However, remote debugging also allows observing user activities and sensitive personal information (aka spying on users) and controlling the browser from a remote computer.
Below screenshot shows a simulated attacker controlling the victim&amp;rsquo;s browser and navigating to chrome://settings to inspect information:</description>
    </item>
    
    <item>
      <title>Hunting for credentials and building a credential type reference catalog</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/2020/hunting-for-credentials/</link>
      <pubDate>Sun, 26 Apr 2020 12:31:29 -0700</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/2020/hunting-for-credentials/</guid>
      <description>Adversaries are leveraging widely exposed clear text credentials to gain access to sensitive information.
At times the term &amp;ldquo;harvesting credentials&amp;rdquo; is used when red teamers emulate these attacks - which is something that appears to be more opportunistic and I would propose that security teams start to actively hunt for credential exposure that can put their organization at risk &amp;ndash; in case you are not yet doing that.
Actively hunting for credential exposure The idea of credential hunting is targeted and focused, leveraging intelligence about systems and combing it with powerful search techniques to identify exposure.</description>
    </item>
    
    <item>
      <title>2600 - The Hacker Quarterly - Pass the Cookie Article</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/2020/2600-hacker-pass-the-cookie/</link>
      <pubDate>Sat, 15 Feb 2020 15:48:51 -0800</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/2020/2600-hacker-pass-the-cookie/</guid>
      <description>Pass the Cookie made it into the latest 2600 magazine! Very excited about this!
I was just walking around Capitol Hill and stopped by Ada&amp;rsquo;s Technical Books on 15th Avenue - a great coffee shop with lots of technical books. Right after walking in to grab a cup of tea, I saw the latest Hacker Quarterly. A few months back I submitted an article about &amp;ldquo;Pass the Cookie&amp;rdquo;, so I had to check, and the article got indeed published!</description>
    </item>
    
    <item>
      <title>MITRE ATT&amp;CK Update for Cloud and cookies!</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/mitreattackupdate/</link>
      <pubDate>Sun, 27 Oct 2019 10:56:03 -0700</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/mitreattackupdate/</guid>
      <description>MITRE just updated the ATT&amp;amp;CK Framework to include Cloud TTPs.
The update includes techniques for stealing cookies from machines and using them for lateral movement. These are the two techniques I helped contribute to the matrix:
 Credential Access - Steal Web Session Cookie Lateral Movement - Web Session Cookie  It was exciting experience to collaborate with MITRE and contribute on this. And kinda cool to see the Pass the Cookie work referenced.</description>
    </item>
    
    <item>
      <title>McPivot and useful LLDB commands</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/lldbbasics/</link>
      <pubDate>Sat, 05 Jan 2019 21:34:51 -0700</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/lldbbasics/</guid>
      <description>Just a list of useful notes when dealing with Macs. I&amp;rsquo;m pretty new to Macs and there might be other, better solutions to the challenges I had to sovle but these worked for me and I&amp;rsquo;m learning. :)
Pivoting between accounts and keychain issues After pivoting on a target host and elevating to root it seems not possible to gain access to other keychains easily. It requires to know the password of the other account still.</description>
    </item>
    
    <item>
      <title>Pass the Cookie and Pivot to the Clouds</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/passthecookie/</link>
      <pubDate>Sun, 16 Dec 2018 12:00:00 -0700</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/passthecookie/</guid>
      <description>Web Applications and Services use cookies to authenticate sessions and users. An adversary can pivot from a compromised host to Web Applications and Internet Services by stealing authentication cookies from browsers and related processes. At the same time this technique bypasses most multi-factor authentication protocols.
The reason for this is that the final authentication token that the attacker steals is issued after all factors have been validated. Many users persist cookies that are valid for an extended period of time, even if the web application is not actively used.</description>
    </item>
    
  </channel>
</rss>