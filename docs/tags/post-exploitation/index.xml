<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Post Exploitation on wunderwuzzi blog</title>
    <link>https://wunderwuzzi23.github.io/blog/tags/post-exploitation/</link>
    <description>Recent content in Post Exploitation on wunderwuzzi blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&amp;copy; WUNDERWUZZI 2020</copyright>
    <lastBuildDate>Tue, 28 Apr 2020 18:00:00 -0700</lastBuildDate>
    
	<atom:link href="https://wunderwuzzi23.github.io/blog/tags/post-exploitation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Post-Exploitation: Abusing Chrome&#39;s debugging feature to observe and control browsing sessions remotely</title>
      <link>https://wunderwuzzi23.github.io/blog/posts/2020/chrome-spy-remote-control/</link>
      <pubDate>Tue, 28 Apr 2020 18:00:00 -0700</pubDate>
      
      <guid>https://wunderwuzzi23.github.io/blog/posts/2020/chrome-spy-remote-control/</guid>
      <description>Chrome&amp;rsquo;s remote debugging feature enables malware post-exploitation to gain access to cookies. Root privileges are not required. This is a pretty well-known and commonly used adversarial technique - at least since 2018 when Cookie Crimes was released.
However, remote debugging also allows observing user activities and sensitive personal information (aka spying on users) and controlling the browser from a remote computer.
Below screenshot shows a simulated attacker controlling the victim&amp;rsquo;s browser and navigating to chrome://settings to inspect information:</description>
    </item>
    
  </channel>
</rss>